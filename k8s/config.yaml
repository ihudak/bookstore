apiVersion: v1
kind: ConfigMap
metadata:
  name: bookstore-configmap
  namespace: bookstore
data:
  mysql_server: mysql-service
  pgdb_server: postgres-service
  clients_svc: clients-svc:81
  books_svc: books-svc:82
  carts_svc: carts-svc:83
  storage_svc: storage-svc:84
  orders_svc: orders-svc:85
  payments_svc: payments-svc:86
  dynapay_svc: superpay-svc:87
  ratings_svc: ratings-svc:88
  tenant_id: <tenant-id>
  tenant_layer: dev # dev | sprint
  clients_agent: otelAgent
  books_agent: oneAgent
  carts_agent: otelAgent
  storage_agent: otelAgent
  orders_agent: oneAgent
  payments_agent: otelAgent
  dynapay_agent: oneAgent
  ratings_agent: otelAgent
  ingest_agent: oneAgent
  web_agent: otelAgent
  bookstore_profile: prod # prod | stage | dev -- logging levels -- prod:ERROR; stage:INFO; dev:DEBUG
  web_app_profile: production # production|staging|development|custom -- production (k8s docker desktop w Ingress) | staging (k8s docker desktop w/o Ingress) | development (w/o kubernetes)
  services_ext_url: http://localhost # if web_app_profile==custom, this is the base EXTERNAL URL where microservices APIs can be found by the web app
